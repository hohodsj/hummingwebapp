<% layout('layouts/boilerplate') %> 
<form action="/admin/update/collection/<%=collection._id%>/<%=collection.collectionName%>" id="description-form" method="POST" enctype="multipart/form-data">
    <label for="title">Title</label>
    <input type="text" class="form-control" name="title" value="<%= collection?.description?.title %>">

    <label for="description">Description</label>
    <textarea class="form-control" name="description" rows="3"><%= collection?.description?.description %></textarea>

    <input type="text" id="orders" name="orders" style="display:none">
    <!-- <input type="text" id="orders" name="orders"> -->
    
    <!-- cover image -->
    <div class="mb-3">
        <label for="cover-image" class="form-label">Cover</label>
        <input type="file" accept=".png, .jpg, .jpeg" class="form-control" name="cover" id="cover-img" onchange="preview()">
        <!-- shows cover image -->
        <img id="frame" src="<%=collection?.cover?.thumbnailUrl%>" class="img-fluid" />
    </div>
    <!-- images to upload -->
    <div class="upload_box">
        <div class="mb-3">
            <label for="image" class="form-label">Images</label>
            <input type="file" accept=".png, .jpg, .jpeg" class="form-control upload-art-works" name="image" id="image" onchange="previews()" multiple>
        </div>
        <div id="upload-group"></div>
        <button type="btn" class="btn btn-success">Save</button>
    </div>
</form>

<!-- images to display -->
<div class="row row-cols-1 row-cols-md-2 g-4 mt-0" id="grid-card" data-masonry='{"percentPosition": true,  "itemSelector": ".col" }'>
    <% for(let artwork of collection?.artworks) {%> 
        <div class="col" data-id="<%=artwork.order%>">
            <form action="/admin/artwork/<%= artwork._id%>?_method=DELETE" method="POST" class="delete_button" style="display:block; position: absolute; top: 3px; right: 15px; overflow:hidden">
                <button type="btn" class="btn btn-danger" value="<%= artwork.fileName %>"><i class="fa fa-times"></i></button>
            </form>
            <div class="thumbnail">
                <img src="<%= artwork.thumbnailUrl%>" class="card-img-top">
            </div>
        </div>
    <% } %>
</div>



<div>
    <a href="/admin/portfolio" class="position-absolute start-0 mx-5">
    <i class="fas fa-angle-left fa-shake nav-arrow" aria-hidden="true">
    </i>
    </a>
</div>

<!-- drag and drop image js -->
<script>
    var imgHashMap = new Map();
    function previews() {
        // get list of the current dragged images
        var imgs = event.target.files
        console.log(event.target.files)
        console.log(`imgHashMap size:${imgHashMap.size}`)
        // find the element where we will append images to
        var uploads = document.getElementById("upload-group");
        for(var img of imgs) {
            // if already added skip
            if (imgHashMap.has(img.name)) {
                console.log('Existed')
                continue
            } 
            imgHashMap.set(img.name, img)
            // var html = document.createElement("img")
            // html.src = URL.createObjectURL(img)
            var image = createImage(img)
            uploads.appendChild(image)
        }
        
        updateFileList()
    }

    function createImage(imgSrc){
        // Create Image
        var image = document.createElement("img")
        image.style.maxWidth = "100%";
        image.style.maxHeight = "100%";
        image.src = URL.createObjectURL(imgSrc)

        // Create Close Button
        var closeButton = document.createElement("button");
        closeButton.data = imgSrc.name;
        closeButton.classList.add("btn-close")
        closeButton.classList.add("btn-outline-danger")
        closeButton.type = "button"
        closeButton.onclick = function() {
            console.log(`Deleting ${this.data}`)
            imgHashMap.delete(imgSrc.name)
            closeButton.parentNode.parentNode.removeChild(closeButton.parentNode)
            updateFileList()
        }
        closeButton.style.display = "block"
        closeButton.style.position = "absolute"
        closeButton.style.top = "3px";
        closeButton.style.right = "3px";
        closeButton.style.overflow = "hidden"
        closeButton.style.textIndent = -9999
        // Create Div for img and close button
        var div = document.createElement("div")
        div.style.position = "relative";
        div.style.width = "200px";
        div.style.height = "200px";
        div.classList.add("d-inline-flex")
        div.classList.add("m-1")
        div.appendChild(image)
        div.appendChild(closeButton)
        return div
    }
    function updateFileList(){
        const input = document.getElementById("image")
        let list = new DataTransfer()
        for(const [imgName, imgFile] of imgHashMap.entries()) {
            console.log(`iter res: ${imgName} : ${imgFile}`)
            let file = new File([imgFile], imgName)
            list.items.add(file)
        }
        let myFileList = list.files
        input.files = myFileList
    }

    function preview() {
        // for cover image
        var tempFiles = event.target.files
        var file0 = event.target.files[0]
        frame.src = URL.createObjectURL(event.target.files[0]);
    }
</script>

<!-- sortable js -->
<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
<script>
    Sortable.create(document.getElementById('grid-card'), {
            group: 'shared',
            animation: 150,
            multiDrag: true,
            selectedClass: 'bg-info',
            fallbackTolerance: 3,
            group: 'storeOrder',
            
            store: {
                set: function(sortable) {
                    var order = sortable.toArray();
                    console.log(`order: ${order}`)
                    const orders = document.getElementById('orders');
                    var regExp = /[a-zA-Z]/g;
                    var all = document.querySelectorAll('.col')
                    var list = Object.keys(order).map(i => all[i].querySelector("button").value)
                    console.log(`list:${list}`)
                    orders.value = list
                }
            },
            onStart: function(event) {
                msnry.destroy();
            },
            onEnd: function(event) {
                var $grid = document.querySelector('.row');
                var msnry = new Masonry($grid, {
                    itemSelector: '.col',
                    percentPosition: true
                });
        
                var $images = $grid.querySelectorAll('.card-img-top');
                $images.forEach(function (el) {
                    el.addEventListener('load', function () {
                        console.log("Image is loaded: " + el.getAttribute("src"));
                        msnry.layout();
                    });
                });
                }
        }) 
</script>